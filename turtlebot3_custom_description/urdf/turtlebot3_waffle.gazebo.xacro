<?xml version="1.0"?>
<robot name="turtlebot3_waffle_sim" xmlns:xacro="http://ros.org/wiki/xacro">
  <xacro:arg name="laser_visual"  default="false"/>
  <xacro:arg name="camera_visual" default="false"/>
  <xacro:arg name="imu_visual"    default="false"/>
  <xacro:macro  name="waffle_sensor_macro" params="prefix">

	<gazebo reference="${prefix}_base_link">
      <material>Gazebo/DarkGrey</material>
	</gazebo>

	<gazebo reference="${prefix}_wheel_left_link">
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
      <kp>500000.0</kp>
      <kd>10.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>0.1</maxVel>
      <fdir1>1 0 0</fdir1>
      <material>Gazebo/FlatBlack</material>
	</gazebo>

	<gazebo reference="${prefix}_wheel_right_link">
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
      <kp>500000.0</kp>
      <kd>10.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>0.1</maxVel>
      <fdir1>1 0 0</fdir1>
      <material>Gazebo/FlatBlack</material>
	</gazebo>

	<gazebo reference="${prefix}_caster_back_right_link">
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.0</maxVel>
      <material>Gazebo/FlatBlack</material>
	</gazebo>

	<gazebo reference="${prefix}_caster_back_left_link">
      <mu1>0.1</mu1>
      <mu2>0.1</mu2>
      <kp>1000000.0</kp>
      <kd>100.0</kd>
      <minDepth>0.001</minDepth>
      <maxVel>1.0</maxVel>
      <material>Gazebo/FlatBlack</material>
	</gazebo>

	<gazebo reference="${prefix}_imu_link">
      <sensor type="imu" name="imu">
		<always_on>true</always_on>
		<visualize>$(arg imu_visual)</visualize>
      </sensor>
      <material>Gazebo/Grey</material>
	</gazebo>

	<gazebo>
      <plugin name="turtlebot3_waffle_controller" filename="libgazebo_ros_diff_drive.so">
		<update_rate>30</update_rate>
		<left_joint>${prefix}_wheel_left_joint</left_joint>
		<right_joint>${prefix}_wheel_right_joint</right_joint>
		<wheel_separation>0.287</wheel_separation>
		<wheel_diameter>0.066</wheel_diameter>
		<max_wheel_acceleration>1</max_wheel_acceleration>
		<max_wheel_torque>10</max_wheel_torque>
		<publish_odom>true</publish_odom>
		<publish_odom_tf>true</publish_odom_tf>
		<publish_wheel_tf>false</publish_wheel_tf>

		<odometry_frame>${prefix}_odom</odometry_frame>
		<robot_base_frame>${prefix}_base_footprint</robot_base_frame>

		<!-- https://github.com/ros-simulation/gazebo_ros_pkgs/wiki/ROS-2-Migration:-Diff-drive -->
		<ros>
		  <remapping>cmd_vel:=${prefix}_cmd_vel</remapping>
		  <remapping>odom:=${prefix}_odom</remapping>
		</ros>
      </plugin>
	</gazebo>

	<!--gazebo>
		<plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
		<alwaysOn>true</alwaysOn>
		<bodyName>${prefix}_imu_link</bodyName>
		<frameName>${prefix}_imu_link</frameName>
		<topicName>${prefix}_imu</topicName>
		<serviceName>${prefix}_imu_service</serviceName>
		<gaussianNoise>0.0</gaussianNoise>
		<updateRate>0</updateRate>
		<imu>
        <noise>
		<type>gaussian</type>
		<rate>
        <mean>0.0</mean>
        <stddev>2e-4</stddev>
        <bias_mean>0.0000075</bias_mean>
        <bias_stddev>0.0000008</bias_stddev>
		</rate>
		<accel>
        <mean>0.0</mean>
        <stddev>1.7e-2</stddev>
        <bias_mean>0.1</bias_mean>
        <bias_stddev>0.001</bias_stddev>
		</accel>
        </noise>
		</imu>
		</plugin>
		</gazebo-->

	<gazebo reference="${prefix}_base_scan">
      <sensor type="ray" name="lds_lfcd_sensor">
        <always_on>true</always_on>
		<pose>0 0 0 0 0 0</pose>
		<!-- if true you can see the ray on gazebo -->
		<visualize>$(arg laser_visual)</visualize>
		<update_rate>5</update_rate>
		<ray>
          <scan>
			<horizontal>
              <samples>360</samples>
              <resolution>1</resolution>
              <min_angle>0.0</min_angle>
              <max_angle>6.28319</max_angle>
			</horizontal>
          </scan>
          <range>
			<min>0.120</min>
			<max>3.5</max>
			<resolution>0.015</resolution>
          </range>
          <noise>
			<type>gaussian</type>
			<mean>0.0</mean>
			<stddev>0.01</stddev>
          </noise>
		</ray>
		<plugin name="gazebo_ros_lds_lfcd_controller" filename="libgazebo_ros_ray_sensor.so">
          <ros>
            <remapping>~/out:=${prefix}_scan</remapping>
          </ros>
          <output_type>sensor_msgs/LaserScan</output_type>
          <frame_name>${prefix}_base_scan</frame_name>
		</plugin>
      </sensor>
	</gazebo>

	<gazebo reference="${prefix}_camera_rgb_frame">
      <sensor type="depth" name="realsense_R200">
        <always_on>true</always_on>
        <visualize>true</visualize>
        <update_rate>30</update_rate>
        <camera name="intel_realsense_r200">
          <horizontal_fov>1.02974</horizontal_fov>
          <image>
            <width>1920</width>
            <height>1080</height>
            <format>R8G8B8</format>
          </image>
          <clip>
            <near>0.02</near>
            <far>300</far>
          </clip>
          <noise>
            <type>gaussian</type>
            <!-- Noise is sampled independently per pixel on each frame.
                 That pixel's noise value is added to each of its color
                 channels, which at that point lie in the range [0,1]. -->
            <mean>0.0</mean>
            <stddev>0.007</stddev>
          </noise>
        </camera>
        <plugin name="camera_driver" filename="libgazebo_ros_camera.so">
          <ros>
            <!-- <namespace>test_cam</namespace> -->
            <!-- <remapping>image_raw:=image_demo</remapping> -->
            <!-- <remapping>camera_info:=camera_info_demo</remapping> -->
          </ros>
          <!-- camera_name>omit so it defaults to sensor name</camera_name-->
          <!-- frame_name>omit so it defaults to link name</frameName-->
          <!-- <hack_baseline>0.07</hack_baseline> -->
        </plugin>
      </sensor>
	</gazebo>
  </xacro:macro>

</robot>
